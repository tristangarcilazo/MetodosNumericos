/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package metodosnumericos2;

import javax.swing.JOptionPane;

/**
 *
 * @author tristan
 */
public class MetInerNewt extends javax.swing.JFrame {

    /** Creates new form MetInerNewt */
    double[][] datos;
    int n;
    public MetInerNewt() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtsalida = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        BtnMenPrin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtinterpol = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTable1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x", "f(x)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setDropMode(javax.swing.DropMode.ON_OR_INSERT_ROWS);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jCheckBox1.setText("He verificado que los datos están correctos.");
        jCheckBox1.setEnabled(false);
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(214, 214, 214));
        jButton3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton3.setText("Limpiar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(214, 214, 214));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setText("Crear filas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtsalida.setEditable(false);
        txtsalida.setColumns(20);
        txtsalida.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtsalida.setRows(5);
        jScrollPane2.setViewportView(txtsalida);

        jButton1.setBackground(new java.awt.Color(214, 214, 214));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setText("Correr método");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(214, 214, 214));
        jButton4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton4.setText("Continuar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        BtnMenPrin.setBackground(new java.awt.Color(214, 214, 214));
        BtnMenPrin.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        BtnMenPrin.setText("Regresar al menú principal");
        BtnMenPrin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMenPrinActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("¿Cuantas filas desea que tenga la tabla?");

        jLabel2.setText("Interpolación de Newton (hacia adelante)");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Ingrese el valor de X para el cual desea obtener la  interpolación");

        txtinterpol.setEnabled(false);
        txtinterpol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinterpolActionPerformed(evt);
            }
        });
        txtinterpol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtinterpolKeyTyped(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton5.setText("Obtener interpolación");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .add(18, 18, 18)
                                .add(jTextField1)
                                .add(18, 18, 18)
                                .add(jButton2))))
                    .add(layout.createSequentialGroup()
                        .add(142, 142, 142)
                        .add(jLabel2))
                    .add(layout.createSequentialGroup()
                        .add(77, 77, 77)
                        .add(jCheckBox1))
                    .add(layout.createSequentialGroup()
                        .add(175, 175, 175)
                        .add(jButton1))
                    .add(layout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(layout.createSequentialGroup()
                                    .add(25, 25, 25)
                                    .add(txtinterpol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jButton5))
                                .add(jLabel3))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(layout.createSequentialGroup()
                                    .add(BtnMenPrin)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 225, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 483, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jButton3)
                .add(212, 212, 212))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2))
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtinterpol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jButton3)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(BtnMenPrin)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        char c=evt.getKeyChar();
        if(Character.isLetter(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese un número", "Dato ingresado incorrecto", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        char c=evt.getKeyChar();
        if(Character.isLetter(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese un número", "Dato ingresado incorrecto", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked

    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MetInerNewt limpio=new MetInerNewt();
        limpio.setLocationRelativeTo(null);
        this.setVisible(false);
        limpio.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(!jTextField1.getText().equals(""))
        {

            jCheckBox1.setEnabled(true);
            jButton1.setEnabled(true);
            jButton2.setEnabled(false);
            n=Integer.parseInt(jTextField1.getText());
            String[][] datos=new String[n][2];
            String[] enc=new String[]{"x","f(x)"};
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                datos,enc
            ));
            JOptionPane.showMessageDialog(rootPane, "Por favor llene la tabla con sus datos.\nPosteriormente confirme que son correctos y presione correr metodo", "Tabla creada", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese el número de filas", "Información necesaria", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!jCheckBox1.isSelected())
        {
            JOptionPane.showMessageDialog(rootPane, "Por favor confirme que los datos son correctos", "Casilla no marcada", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            if(jTable1.isEditing())
            jTable1.getCellEditor().stopCellEditing();
            int n=Integer.parseInt(jTextField1.getText());
            boolean cond=true;
            for(int i=0;i<n;++i)
            {
                if(jTable1.getValueAt(i, 0)==null || jTable1.getValueAt(i, 1)==null)
                {
                    JOptionPane.showMessageDialog(rootPane, "Por favor llene todos los campos de la tabla", "Datos faltantes en fila "+i, JOptionPane.ERROR_MESSAGE);
                    cond=false;
                    break;
                }
            }
            if (cond==true)
            {
                jButton1.setEnabled(false);
                jTable1.setEnabled(false);
                datos=new double[n][n+1];
                for(int i=0;i<n;++i)
                {
                    datos[i][0]=Double.parseDouble(jTable1.getValueAt(i, 0).toString());
                    datos[i][1]=Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                }

                for(int i=0;i<n;++i)
                {
                    for(int j=0;j<n+1;++j)
                    {
                        System.out.print(datos[i][j]+"   ");
                    }
                    System.out.println();
                }
                System.out.println("//////////////////////////////////////////////////");

                for(int i=2,x=0;i<n+1;++i,++x){
                    for(int j=0; j+i<=n;++j){
                        System.out.println("j= "+j+"   i= "+i);
                        datos[j][i]=(datos[j+1][i-1]-datos[j][i-1])/(datos[j+i-1][0]-datos[j][0]);
                    }
                }
                String[] equis=new String[n-1];
                for(int i=0;i<n-1;++i)
                {
                    equis[i]="";
                    for(int j=0;j<=i;++j)
                    {
                        equis[i]+="(x-"+datos[j][0]+")";
                    }
                }
                String salida="";
                for(int i=1;i<n+1;++i)
                {
                    if(i==1)
                    salida+=datos[0][i];
                    else
                    {
                        salida+=" + ";
                        salida+=(datos[0][i])+equis[i-2];
                    }
                }
                System.out.println(salida);
                JOptionPane.showMessageDialog(rootPane, "Deslice la barra horizontal para ver el polinomio completo.\nNota: Si algun coefi"
                    + "ciente del polinomio es muy pequeño, se mostrara en notación exponencial.", "Ejecucion completa.", JOptionPane.INFORMATION_MESSAGE);
                txtsalida.setText(salida);
                txtinterpol.setEnabled(true);
                jButton5.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        MetPolGran poli=new MetPolGran();
        poli.setLocationRelativeTo(null);
        this.setVisible(false);
        poli.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void BtnMenPrinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMenPrinActionPerformed
        // TODO add your handling code here:
        MenuPrincipal mp=new MenuPrincipal();
        mp.setLocationRelativeTo(null);
        this.setVisible(false);
        mp.setVisible(true);
    }//GEN-LAST:event_BtnMenPrinActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        double in=Double.parseDouble(txtinterpol.getText());
        System.out.println(in);
        double min=datos[0][0],max=datos[0][n];
        for(int i=0;i<n;++i)
        {
            if(datos[i][0]<min)
                min=datos[i][0];
            if(datos[i][0]>max)
                max=datos[i][0];
        }
        if(in>max||in<min)
            JOptionPane.showMessageDialog(rootPane, "El dato que ingresó esta fuera del intervalo dado en los datos, por favor ingrese un dato correcto", "Dato incorrecto", JOptionPane.ERROR_MESSAGE);
        else
        {
            double resultado=0;
            double[] equis=new double[n-1];
            for(int i=0;i<n-1;++i)               
            {
                equis[i]=1;
                for(int j=0;j<=i;++j)
                {
                    equis[i]*=(in-datos[j][0]);
                }
                System.out.println("equis["+i+"]  ="+equis[i]);
            }
            for(int i=1;i<n+1;++i)
                {
                    if(i==1)
                    resultado+=fix(datos[0][i]);
                    else
                    {
                        resultado+=fix(datos[0][i]*equis[i-2]);
                    }
                }
            System.out.println("res= "+resultado);
            JOptionPane.showMessageDialog(rootPane, "El valor aproximado de f(x) con x="+in+" es: "+fix(resultado), "Interpolación exitosa", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    public double fix(double x)
    {
        x*=10000;
        x=Math.round(x);
        return(x/10000);
    }
    
    private void txtinterpolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinterpolActionPerformed
        
    }//GEN-LAST:event_txtinterpolActionPerformed

    private void txtinterpolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtinterpolKeyTyped
        char c=evt.getKeyChar();
        if(Character.isLetter(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese un número", "Dato ingresado incorrecto", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtinterpolKeyTyped

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MetInerNewt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MetInerNewt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MetInerNewt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MetInerNewt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MetInerNewt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnMenPrin;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtinterpol;
    private javax.swing.JTextArea txtsalida;
    // End of variables declaration//GEN-END:variables

}
